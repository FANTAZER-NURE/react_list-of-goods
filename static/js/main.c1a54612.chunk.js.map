{"version":3,"sources":["App.tsx","components/Button.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","Button","text","className","method","type","onClick","GoodsList","goods","isStarted","map","good","goodsFromServer","App","state","sortType","NONE","isReversed","start","setState","reverse","sortAlph","ALPABET","sortLen","LENGTH","reset","this","sort","a","b","localeCompare","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,2ECXQC,EAA0B,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OACzD,OACE,wBACEC,KAAK,SACLC,QAASF,EACTD,UAAWA,EAHb,SAKGD,KCPMK,EAA6B,SAAC,GAAqC,IAAnCJ,EAAkC,EAAlCA,UAAWK,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC7D,OACE,oBAAIN,UAAWA,EAAf,SACGM,GACID,EAAME,KAAI,SAACC,GAAD,OACX,oBAAIR,UAAU,0BAAd,SAAoDQ,GAAPA,SFPjDC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGZ,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAWE,IAAMa,EAAb,4MACEC,MAAyB,CACvBL,WAAW,EACXM,SAAUf,EAASgB,KACnBC,YAAY,GAJhB,EAOEC,MAAQ,WACN,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBL,WAAYK,EAAML,eATxB,EAaEW,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAfzB,EAmBEI,SAAW,WACT,EAAKF,SAAU,CACbJ,SAAUf,EAASsB,WArBzB,EAyBEC,QAAU,WACR,EAAKJ,SAAU,CACbJ,SAAUf,EAASwB,UA3BzB,EA+BEC,MAAQ,WACN,EAAKN,SAAU,CACbJ,SAAUf,EAASgB,KACnBC,YAAY,KAlClB,4CAsCE,WACE,IAAIT,EAAK,UAAOI,GAChB,EAAiCc,KAAKZ,MAA9BG,EAAR,EAAQA,WAER,OAFA,EAAoBF,UAGlB,KAAKf,EAASsB,QACZd,EAAQA,EAAMmB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7C,MACF,KAAK7B,EAASwB,OACZhB,EAAQA,EAAMmB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAC1C,MACF,KAAK/B,EAASgB,KACZR,EAAK,UAAOI,GAUhB,OAJIK,GACFT,EAAMY,UAIN,sBAAKjB,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,WACIuB,KAAKZ,MAAML,WAET,cAAC,EAAD,CACEP,KAAK,QACLC,UAAU,wCACVC,OAAQsB,KAAKR,QAIlBQ,KAAKZ,MAAML,WAER,cAAC,EAAD,CACEP,KAAK,sBACLC,UAAU,0BACVC,OAAQsB,KAAKL,WAIlBK,KAAKZ,MAAML,WAER,cAAC,EAAD,CACEP,KAAK,iBACLC,UAAU,0BACVC,OAAQsB,KAAKH,UAIlBG,KAAKZ,MAAML,WAER,cAAC,EAAD,CACEP,KAAK,UACLC,UAAU,0BACVC,OAAQsB,KAAKN,UAIlBM,KAAKZ,MAAML,WAER,cAAC,EAAD,CACEP,KAAK,QACLC,UAAU,4BACVC,OAAQsB,KAAKD,WAMpBC,KAAKZ,MAAML,WAER,cAAC,EAAD,CACEN,UAAU,cACVK,MAAOA,EACPC,UAAWiB,KAAKZ,MAAML,mBAnHpC,GAAyBuB,IAAMC,WG3B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c1a54612.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\nimport { Button } from './components/Button';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  start = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlph = () => {\n    this.setState(({\n      sortType: SortType.ALPABET,\n    }));\n  };\n\n  sortLen = () => {\n    this.setState(({\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reset = () => {\n    this.setState(({\n      sortType: SortType.NONE,\n      isReversed: false,\n    }));\n  };\n\n  render() {\n    let goods = [...goodsFromServer];\n    const { isReversed, sortType } = this.state;\n\n    switch (sortType) {\n      case SortType.ALPABET:\n        goods = goods.sort((a, b) => a.localeCompare(b));\n        break;\n      case SortType.LENGTH:\n        goods = goods.sort((a, b) => a.length - b.length);\n        break;\n      case SortType.NONE:\n        goods = [...goodsFromServer];\n        break;\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"App column\">\n        <div className=\"level\">\n          {!this.state.isStarted\n            && (\n              <Button\n                text=\"Start\"\n                className=\"button is-light is-primary level-item\"\n                method={this.start}\n              />\n            )}\n\n          {this.state.isStarted\n            && (\n              <Button\n                text=\"Sort alphabetically\"\n                className=\"button is-light is-link\"\n                method={this.sortAlph}\n              />\n            )}\n\n          {this.state.isStarted\n            && (\n              <Button\n                text=\"Sort by length\"\n                className=\"button is-light is-link\"\n                method={this.sortLen}\n              />\n            )}\n\n          {this.state.isStarted\n            && (\n              <Button\n                text=\"Reverse\"\n                className=\"button is-light is-link\"\n                method={this.reverse}\n              />\n            )}\n\n          {this.state.isStarted\n            && (\n              <Button\n                text=\"Reset\"\n                className=\"button is-light is-danger\"\n                method={this.reset}\n              />\n            )}\n\n        </div>\n\n        {this.state.isStarted\n          && (\n            <GoodsList\n              className=\"panel Goods\"\n              goods={goods}\n              isStarted={this.state.isStarted}\n            />\n          )}\n\n      </div>\n    );\n  }\n}\n","import React, { MouseEventHandler } from 'react';\n\ntype Props = {\n  text: string,\n  className: string,\n  method: MouseEventHandler<HTMLButtonElement>\n};\n\nexport const Button: React.FC<Props> = ({ text, className, method }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={method}\n      className={className}\n    >\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  className: string,\n  goods: string[],\n  isStarted: boolean\n};\n\nexport const GoodsList: React.FC<Props> = ({ className, goods, isStarted }) => {\n  return (\n    <ul className={className}>\n      {isStarted\n        && goods.map((good:string) => (\n          <li className=\"Goods__item panel-block\" key={good}>{good}</li>\n        ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}